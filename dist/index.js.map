{
  "version": 3,
  "sources": ["../lib/ndarray.js", "../lib/sindex_of.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the first index of a specified search element in a single-precision floating-point strided array using alternative indexing semantics.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} searchElement - search element\n* @param {Float32Array} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {integer} index\n*\n* @example\n* var Float32Array = require( '@stdlib/array-float32' );\n*\n* var x = new Float32Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ] );\n*\n* var idx = sindexOf( x.length, 3.0, x, 1, 0 );\n* // returns 2\n*/\nfunction sindexOf( N, searchElement, x, strideX, offsetX ) {\n\tvar ix;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn -1;\n\t}\n\tix = offsetX;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( x[ ix ] === searchElement ) {\n\t\t\treturn i;\n\t\t}\n\t\tix += strideX;\n\t}\n\treturn -1;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sindexOf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Returns the first index of a specified search element in a single-precision floating-point strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} searchElement - search element\n* @param {Float32Array} x - input array\n* @param {integer} strideX - stride length\n* @returns {integer} index\n*\n* @example\n* var Float32Array = require( '@stdlib/array-float32' );\n*\n* var x = new Float32Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ] );\n*\n* var idx = sindexOf( x.length, 3.0, x, 1 );\n* // returns 2\n*/\nfunction sindexOf( N, searchElement, x, strideX ) {\n\treturn ndarray( N, searchElement, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = sindexOf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar sindexOf = require( './sindex_of.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( sindexOf, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = sindexOf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the first index of a specified search element in a single-precision floating-point strided array.\n*\n* @module @stdlib/blas-ext-base-sindex-of\n*\n* @example\n* var Float32Array = require( '@stdlib/array-float32' );\n* var sindexOf = require( '@stdlib/blas-ext-base-sindex-of' );\n*\n* var x = new Float32Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ] );\n*\n* var idx = sindexOf( x.length, 3.0, x, 1 );\n* // returns 2\n*\n* @example\n* var Float32Array = require( '@stdlib/array-float32' );\n* var sindexOf = require( '@stdlib/blas-ext-base-sindex-of' );\n*\n* var x = new Float32Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ] );\n*\n* var idx = sindexOf.ndarray( x.length, 3.0, x, 1, 0 );\n* // returns 2\n*/\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar tryRequire = require( '@stdlib/utils-try-require' );\nvar isError = require( '@stdlib/assert-is-error' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar sindexOf;\nvar tmp = tryRequire( join( __dirname, './native.js' ) );\nif ( isError( tmp ) ) {\n\tsindexOf = main;\n} else {\n\tsindexOf = tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = sindexOf;\n\n// exports: { \"ndarray\": \"sindexOf.ndarray\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAwCA,SAASC,EAAUC,EAAGC,EAAeC,EAAGC,EAASC,EAAU,CAC1D,IAAIC,EACAC,EAEJ,GAAKN,GAAK,EACT,MAAO,GAGR,IADAK,EAAKD,EACCE,EAAI,EAAGA,EAAIN,EAAGM,IAAM,CACzB,GAAKJ,EAAGG,CAAG,IAAMJ,EAChB,OAAOK,EAERD,GAAMF,CACP,CACA,MAAO,EACR,CAKAL,EAAO,QAAUC,IC5DjB,IAAAQ,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAU,IAsBd,SAASC,EAAUC,EAAGC,EAAeC,EAAGC,EAAU,CACjD,OAAOL,EAASE,EAAGC,EAAeC,EAAGC,EAASN,EAAeG,EAAGG,CAAQ,CAAE,CAC3E,CAKAP,EAAO,QAAUG,ICpDjB,IAAAK,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,uDAAwD,EAC/EC,EAAW,IACXC,EAAU,IAKdF,EAAaC,EAAU,UAAWC,CAAQ,EAK1CH,EAAO,QAAUE,ICYjB,IAAIE,EAAO,QAAS,MAAO,EAAE,KACzBC,EAAa,QAAS,2BAA4B,EAClDC,EAAU,QAAS,yBAA0B,EAC7CC,EAAO,IAKPC,EACAC,EAAMJ,EAAYD,EAAM,UAAW,aAAc,CAAE,EAClDE,EAASG,CAAI,EACjBD,EAAWD,EAEXC,EAAWC,EAMZ,OAAO,QAAUD",
  "names": ["require_ndarray", "__commonJSMin", "exports", "module", "sindexOf", "N", "searchElement", "x", "strideX", "offsetX", "ix", "i", "require_sindex_of", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "sindexOf", "N", "searchElement", "x", "strideX", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "sindexOf", "ndarray", "join", "tryRequire", "isError", "main", "sindexOf", "tmp"]
}
